2-07 HTTP 요청과 응답 - 이론

# 1. 프로토콜(protocol)이란?

	서로 간의 통신을 위한 약속, 규칙 / 주고 받을 데이터에 대한 형식을 정의한 것

# 2. HTTP(Hyper Text Transfer Protocol) 란?

	텍스트 기반의 프로토콜 			(단순하고 읽기 쉽다.)
	클라이언트 정보를 저장하지 않는다. 	(상태를 유지하지 않는다 / stateless) 	: 	클라이언트의 정보를 저장하지 않기 때문에, 이를 보완하기 위해 쿠기 & 세션을 사용한다.
	커스텀헤더 추가 가능 				(확장이 가능하다.)					:	사용자가 정의한 헤더(대소문자를 구분하지 않음)와 값을 추가할 수 있다.
	
# 3. HTTP 메시지

	요청Method 형식)
		# GET 	: Read	(URL에 데이터 저장)	: 요청한 리소스를 얻어오기 위한 메소드	: Query String을 통해 데이터를 전달(소용량), URL에 데이터가 노출 되므로 보안에 취약하지만 데이터 공유에는 유리하다.
		# POST 	: Write (바디에 데이터 저장)	: 데이터를 서버에 전송하기 위한 메소드	: 데이터크기 제한이 없고, 보안에는 유리(https를 사용할 때만 유리)하지만 데이터 공유에는 불리하다.
	
		# GET
		http://111.22.33.44:8080/ch2/getYoil?year=2021&month=10&day=1
		
		#요청라인(request line)
		GET /ch2/getYoil HTTP/1.1
		#헤더
		HOST:111.22.33.44:8080
		User-Agent:Mozilla/5.0(Windows NT 10.0)
		Accept:text/html
		Connection:keep-alive
		
		# POST
		http://111.22.33.44:8080/ch2/getYoil?year=2021&month=10&day=1
		
		#요청라인(request line)
		POST /ch2/getYoil HTTP/1.1
		#헤더
		HOST:111.22.33.44:8080
		User-Agent:Mozilla/5.0(Windows NT 10.0)			
		Accept:text/html
		Connection:keep-alive
												: 헤더, 바디 구분줄
		year=2021&month=10&day=1
		
		
	응답메시지 형식)
		#상태라인(status line)
		HTTP/1.1 200 OK						: [[200 : 상태코드]] / [[1xx : informational], [2xx : Success], [3xx : Redirect(다른 URL요청)], [4xx : Client Error], [5xx : Server Error]]
		#헤더
		Content-Length:44					
		Content-Type:text/html
		Date:Sat, 20 Oct 2021-19:03:38 GMT
											: 헤더, 바디 구분줄
		#응답본문
		<html>
		<head></head>
		<body>Hello</body>
		</html>